import React, { useState } from 'react';
import './App.css'; // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CSS —Ñ–∞–π–ª–∞
import { Task } from '../model/types/task';
import { initialTasks, taskTypeDirectory } from '../model/constants/tasks';

// useMemo –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º, –¥–∞–±—ã –Ω–µ —É—Å–ª–æ–∂–Ω—è—Ç—å –∑–∞–¥–∞—á—É
const App: React.FC = () => {

  const [tasks, setTasks] = useState<Task[]>(initialTasks);

  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
  // const totalBudget = tasks.reduce

  // –ü–æ–¥—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
  // const completedTasksCount = tasks.

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á –ø–æ —Ç–∏–ø—É
  // const tasksByType = tasks.reduce<Record<string, Task[]>>((result, task) => {

  // }, {});

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
  const toggleTaskCompletion = (id: number) => {
    setTasks((prevTasks) =>
      prevTasks.map((task) =>
        task.id === id ? { ...task, completed: !task.completed } : task
      )
    );
  };

  return (
    <div className="container">
      <h1 className="header">üéÑ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞</h1>

      <h2 className="sub-header">üõ†Ô∏è –ó–∞–¥–∞—á–∏:</h2>
      <ul className="task-list">
        {tasks.map((task) => (
          <li
            key={task.id}
            className={`task-item ${task.completed ? 'completed' : 'not-completed'}`}
            onClick={() => toggleTaskCompletion(task.id)} // –û—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ/–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
          >
            <strong>{task.title}</strong> ‚Äî {task.cost} —Ä—É–±. [{taskTypeDirectory[task.type]}] ‚Äî{' '}
            <span>{task.completed ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ'}</span>
          </li>
        ))}
      </ul>

      {/* <h2 className="sub-header">üí∞ –û–±—â–∏–π –±—é–¥–∂–µ—Ç: {totalBudget} —Ä—É–±.</h2> */}
      {/* <h2 className="sub-header">
        ‚úîÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: {completedTasksCount} –∏–∑ {tasks.length}
      </h2> */}

      <h2 className="sub-header">üìä –ó–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:</h2>
      {/* {Object.entries(tasksByType).map(([type, tasks]) => (
        <div key={type} className="category">
          <h3 className="category-header">{taskTypeDirectory[type]}:</h3>
          <ul className="category-list">
            {tasks.map((task) => (
              <li key={task.id} className="category-item">
                {task.title} ‚Äî {task.cost} —Ä—É–±.
              </li>
            ))}
          </ul>
        </div>
      ))} */}
    </div>
  );
};

export default App;
